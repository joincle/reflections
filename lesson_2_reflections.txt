What happens when you initialize a repository? Why do you need to do it?
When you use the command git init, .git file is created. Version control was
needed.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
working directory -> the stage area -> the repository
the working directory is files you working with.
the staging area is the files used for git commit.
the repository is all the files contained all the commit history and all the files 

How can you use the staging area to make sure you have one commit per logical
change?
use the git add command to set the status of the related file to the staging area,
and then commit the change of the file, and make sure the logical change have its 
new feature or function.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
backup the master, and more experimenting and trying based on existing code without breaking
them, and push the project forward.

How do the diagrams help you visualize the branch structure?
the diagrams uses different symbols to show the branch structure.
it's really help to see the branch structure.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?